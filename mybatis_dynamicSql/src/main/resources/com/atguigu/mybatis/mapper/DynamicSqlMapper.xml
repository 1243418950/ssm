<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.DynamicSqlMapper">
    <!--mapper接口的全类名和namespace保持一致，接口中的int insertUser();接口名与方法名保持一致-->
    <!--<select id="getEmpByCondition" resultType="emp">
        select * from t_emp where
        <if test="empName != null and empName !=''">
            emp_name =#{empName}
        </if>
        <if test="age != null and age !=''">
            and age=#{age}
        </if>
        <if test="gender != null and gender !=''">
            and gender=#{gender}
        </if>
    </select>-->
    <!--<select id="getEmpByCondition" resultType="emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName !=''">
                and emp_name =#{empName}
            </if>
            <if test="age != null and age !=''">
                and age=#{age}
            </if>
            <if test="gender != null and gender !=''">
                and gender=#{gender}
            </if>
        </where>
    </select>-->

    <!--
    suffix\prefix在标签中的内容前面或后面添加指定内容
    suffixOverrides\prefixOverrides在标签中的内容前面或后面去掉指定内容
    -->
    <sql id="empColumns"><!--记录sql片段-->
        emp_id,emp_name,age,gender,dept_id
    </sql>
    <select id="getEmpByCondition" resultType="emp">
        select <include refid="empColumns"></include> from t_emp
        <trim prefix="where" suffixOverrides="and" prefixOverrides="and">
            <if test="empName != null and empName !=''">
                and emp_name =#{empName}
            </if>
            <if test="age != null and age !=''">
                and age=#{age}
            </if>
            <if test="gender != null and gender !=''">
                and gender=#{gender}
            </if>
        </trim>
    </select>
    <!--类似于 switch case-->
    <select id="getEmpByChoose" resultType="emp">
        select * from t_emp
        <where>
            <choose>
                <when test="empName != null and empName !=''">
                    emp_name =#{empName}
                </when>
                <when test="age != null and age !=''">
                    age=#{age}
                </when>
                <when test="gender != null and gender !=''">
                    gender=#{gender}
                </when>

            </choose>
        </where>
    </select>
    <insert id="insertMoreEmp">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.gender},null)
        </foreach>
    </insert>
    <delete id="deleteMoreEmp">
        delete from t_emp where emp_id in
        <foreach collection="empIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
</mapper> 